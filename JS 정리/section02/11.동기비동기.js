// 동기란?
// : 여러개의 작업을 순서대로, 하나씩 처리하는 방식
// : 자바스크립트는 "동기"적으로 코드를 실행한다.
// : 자바스크립트 엔진에는 "쓰레드가 1개" 밖에 없음(싱글 쓰레드)

// 단점?
// : 만약에 하나의 작업이 오래 걸리는 작업이라면 "쓰레드"는 "이 작업이 완료될 때까지 다음 작업을 중단"시킨다. 
// => 자바스크립트 엔진은 쓰레드가 1개 밖에 없어서 "비동기 방식"을 통해서 해결한다.

// 비동기란?
// : 동기적이지 않다는 뜻
// : 작업을 순서대로 처리하지 않음
// => 때문에 여러개의 작업을 진행할 때 앞선 작업을 기다리지 않고 다음 작업을 동시에 진행시키는 것이 가능하다.
// + 각각의 작업이 종료되었을 때 해당 작업에 결괏값을 이용했을 때 또다른 동작을 수행시켜줘야 한다면
// 해당 작업에 "콜백 함수"를 붙여서 처리해주는 것도 가능하다.

// 어떻게 동시에 작업을 처리하는거지?
// : 비동기 작업(setTimeout..etc)들은 자바스크립트 엔진이 아닌 Web APIs에서 실행 됨.

// 1. 브라우저에 탑재된 "자바스크립트 엔진"은 비동기 함수를 만나면 "Web APIs에게 실행해달라고 요청"한다.
// 2. setTimeout과 타이머가 끝나고 실행될 콜백함수까지 "넘겨준다."
// 3. 그리고 자바스크립트 엔진은 타이머를 기다리지 않고 이어서 "다음 코드를 실행"한다.
// 4. 그리고 타이머가 끝나면 콜백함수를 "자바스크립트 엔진"에게 "다시 돌려준다.""
// 5. 그리고 자바스크립트 엔진은 "콜백 함수"를 실행시킨다.

// Web APIs?
// : 브라우저가 직접 관리하는 별도의 영역
// : 실제로 자바스크립트의 비동기 작업이 실행되는 영역

console.log(1);

setTimeout(() => {
    console.log(2);     // 3초 뒤에, setTimeout 함수가 내부적으로 콜백 함수를 실행시킨다.
}, 3000);

console.log(3);

// 1 3 2